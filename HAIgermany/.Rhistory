# --- NORRLAND ---
city %in% c(
# Gävleborg län
"VALLVIK", "NORRSUNDET", "GÄVLE", "LJUSDAL",
# Västernorrland län
"SUNDSVALL", "HÄRNÖSAND", "ÖRNSKÖLDSVIK",
# Västerbotten län
"UMEÅ", "HOLMSUND", "SKELLEFTEA", "SKELLEFTEHAMN",
# Norrbotten län
"LULEÅ",
# Jämtland län
"BRÄCKE", "STRÖMSUND<BR>, JAMTLAND COUNTY", "ÖSTERSUND", "SÄLEN"
) ~ "Norrland",
# --- FOREIGN / UNKNOWN ---
city %in% c("BALLERUP", "OSLO", "STRYN") ~ NA_character_,
TRUE ~ NA_character_
)
)
osiris_Sweden <- osiris_reduced |>
filter(!is.na(region))
#osiris_Sweden <- read_csv("osiris_Sweden.csv")
#
# osiris_Sweden |>
#   filter(!is.na(Size)) |>
# ggplot(aes(x = `Company Fiscal Year End Date`)) +
#   geom_histogram(aes(fill = Size)) +
#   facet_wrap(~Size, scales = "free_y")
# Previous stratification method - creating equally sized quantiles
osiris_size <- osiris_Sweden |>
mutate(
size_quintile = ntile(`Total Assets`, 3),
log_assets = log10(`Total Assets`)
)
ggplot(osiris_size, aes(x = log_assets, fill = as.factor(size_quintile))) +
geom_density(alpha = 0.4) +
labs(fill = "Asset Quintile", x = "Log10(Total Assets)", y = "Density")
osiris_size |>
count(size_quintile)
osiris_size <- osiris_size |>
mutate(Size = case_when(
size_quintile == 1 ~ "Small",
size_quintile == 2 ~ "Medium",
size_quintile == 3 ~ "Large"))
firm_features_log <- osiris_size %>%
transmute(
nameID,
assets    = log1p(`Total Assets`),
revenues  = log1p(`Total revenues`),
employees = log1p(`No. Of employed`)
) %>%
group_by(nameID) %>%
summarise(across(everything(), median, na.rm = TRUE), .groups = "drop") %>%
drop_na()
X_log <- firm_features_log %>%
select(-nameID) %>%
scale()
set.seed(67)
log_km <- kmeans(X_log, centers = 3, nstart = 50)
clusters_log <- firm_features_log %>%
transmute(nameID, size_cluster_log_raw = log_km$cluster) %>%
distinct(nameID, .keep_all = TRUE)
osiris_cluster_log <- osiris_size %>%
left_join(clusters_log, by = "nameID")
# Assigning cluster labels based on range and median Total Assets
osiris_cluster_log |>
filter(!is.na(size_cluster_log_raw)) |>
group_by(size_cluster_log_raw) |>
summarise(
n = n(),
min_assets  = min(`Total Assets`, na.rm = TRUE),
median_assets = median(`Total Assets`, na.rm = TRUE),
max_assets  = max(`Total Assets`, na.rm = TRUE),
.groups = "drop"
) |>
arrange(median_assets)
cluster_labels <- c("1" = "Small",
"2" = "Large",
"3" = "Medium")
osiris_cluster <- osiris_cluster_log |>
mutate(Size = recode(as.character(size_cluster_log_raw), !!!cluster_labels),
Size = factor(Size, levels = c("Small", "Medium", "Large"))) |>
select(-c ("size_quintile", "log_assets", "size_cluster_log_raw"))
osiris_Sweden <- osiris_cluster
#write.csv(osiris_cluster, "osiris_Sweden.csv", row.names = FALSE)
osiris_UK <- read_csv("osiris_UK.csv", show_col_types = TRUE)
p1 <- ggplot(osiris_UK, aes(x = `Net Debt`, y = `Total revenues`)) +
geom_point(data = dplyr::select(osiris_UK, -Industry), color = "gray") +
scale_x_log10() +
scale_y_log10() +
geom_point(aes(color = Industry)) +
facet_wrap(~ Industry, ncol = 5) +
labs(title = "UK") +
scale_color_discrete_divergingx(palette="Zissou 1") +
guides(color = FALSE)
p2 <- ggplot(osiris_Sweden, aes(x = `Net Debt`, y = `Total revenues`)) +
geom_point(data = dplyr::select(osiris_Sweden, -Industry), color = "gray") +
scale_x_log10() +
scale_y_log10() +
geom_point(aes(color = Industry)) +
facet_wrap(~ Industry, ncol = 5) +
labs(title = "Sweden") +
scale_color_discrete_divergingx(palette="Zissou 1") +
guides(color = FALSE)
p1+p2
inactive_levels <- c(
"In liquidation","Bankruptcy","Dissolved",
"Dissolved (merger)","Dissolved (liquidation)","Inactive (no precision)"
)
# Keep unique companies (by Ticker) to avoid double counting
base_inactive <- osiris_UK %>%
filter(Status %in% inactive_levels) %>%
distinct(`Ticker Symbol`, Year, Status, Industry, city)
top_industries <- base_inactive %>%
count(Industry, sort = TRUE) %>%
slice_head(n = 12) %>%
pull(Industry)
p1 <- base_inactive %>%
mutate(Industry2 = fct_other(Industry, keep = top_industries)) %>%
count(Year, Industry2, name = "n") %>%
group_by(Year) %>%
mutate(prop = n / sum(n)) %>%
ungroup() %>%
ggplot(aes(x = factor(Year), y = prop, fill = Industry2)) +
geom_col() +
scale_y_continuous(labels = scales::percent_format()) +
labs(
title = "UK",
x = "Year", y = "Share of Inactive companies", fill = "Industry"
)
base_inactive <- osiris_Sweden %>%
filter(Status %in% inactive_levels) %>%
distinct(`Ticker Symbol`, Year, Status, Industry, city)
top_industries <- base_inactive %>%
count(Industry, sort = TRUE) %>%
slice_head(n = 12) %>%
pull(Industry)
p2 <- base_inactive %>%
mutate(Industry2 = fct_other(Industry, keep = top_industries)) %>%
count(Year, Industry2, name = "n") %>%
group_by(Year) %>%
mutate(prop = n / sum(n)) %>%
ungroup() %>%
ggplot(aes(x = factor(Year), y = prop, fill = Industry2)) +
geom_col() +
scale_y_continuous(labels = scales::percent_format()) +
labs(
title = "Sweden",
x = "Year", y = "Share of Inactive companies", fill = "Industry"
)
p1+p2+plot_annotation(
title = "Inactive Status of Companies Among Industries (2017 - 2021)"
)
p1+p2+plot_annotation(
title = "Inactive Status of Companies Among Industries (2017 - 2021)"
)
(p1 + p2) +
plot_annotation(
title = "Inactive Status of Companies Among Industries (2017 - 2021)"
) &
theme(plot.title = element_text(size = 10, hjust = 0.5))
(p1 + p2) +
plot_annotation(
title = "Inactive Status of Companies Among Industries (2017 - 2021)"
)
library(dplyr)
library(ggplot2)
library(forcats)
library(patchwork)
library(scales)
inactive_levels <- c(
"In liquidation", "Bankruptcy", "Dissolved",
"Dissolved (merger)", "Dissolved (liquidation)", "Inactive (no precision)"
)
# ---- UK plot ----
base_inactive_UK <- osiris_UK %>%
filter(Status %in% inactive_levels) %>%
distinct(`Ticker Symbol`, Year, Status, Industry, city)
top_industries_UK <- base_inactive_UK %>%
count(Industry, sort = TRUE) %>%
slice_head(n = 12) %>%
pull(Industry)
p1 <- base_inactive_UK %>%
mutate(Industry2 = fct_other(Industry, keep = top_industries_UK)) %>%
count(Year, Industry2, name = "n") %>%
group_by(Year) %>%
mutate(prop = n / sum(n)) %>%
ungroup() %>%
ggplot(aes(x = factor(Year), y = prop, fill = Industry2)) +
geom_col() +
scale_y_continuous(labels = percent_format()) +
scale_fill_brewer(palette = "Set3") +
labs(
title = "UK",
x = "Year", y = "Share of Inactive Companies", fill = "Industry"
) +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom")
# ---- Sweden plot ----
base_inactive_SE <- osiris_Sweden %>%
filter(Status %in% inactive_levels) %>%
distinct(`Ticker Symbol`, Year, Status, Industry, city)
top_industries_SE <- base_inactive_SE %>%
count(Industry, sort = TRUE) %>%
slice_head(n = 12) %>%
pull(Industry)
p2 <- base_inactive_SE %>%
mutate(Industry2 = fct_other(Industry, keep = top_industries_SE)) %>%
count(Year, Industry2, name = "n") %>%
group_by(Year) %>%
mutate(prop = n / sum(n)) %>%
ungroup() %>%
ggplot(aes(x = factor(Year), y = prop, fill = Industry2)) +
geom_col() +
scale_y_continuous(labels = percent_format()) +
scale_fill_brewer(palette = "Set3") +
labs(
title = "Sweden",
x = "Year", y = "Share of Inactive Companies", fill = "Industry"
) +
theme_minimal(base_size = 12) +
theme(legend.position = "bottom")
# ---- Combine plots ----
combined_plot <- (p1 + p2) +
plot_annotation(
title = "Inactive Status of Companies Among Industries (2017 - 2021)",
theme = theme(
plot.title = element_text(size = 20, face = "bold", hjust = 0.5)
)
)
combined_plot
remotes::install_github("NathalieAaes/HAIgermany")
remotes::install_github("NathalieAaes/assignment-4-packages-and-shiny-apps-NathalieAaes", subdir = "HAIgermany")
remotes::install_github("assignment-4-packages-and-shiny-apps-NathalieAaes", subdir = "HAIgermany")
remotes::install_github(
"ETC5523-2025/assignment-4-packages-and-shiny-apps-NathalieAaes",
subdir = "HAIgermany"
)
## What’s inside
### Datasets
- `mccabe_scores_distr`: Distribution of McCabe scores by infection, age, and gender.
rmarkdown::render("index.md")
rmarkdown::render("index.md")
pkgdown::build_site()
install.packages("rmarkdown")
# Render index.md → index.html
rmarkdown::render("index.md", output_file = "index.html")
install.packages("rmarkdown")
install.packages("rmarkdown")
# Render index.md → index.html
rmarkdown::render("index.md", output_file = "index.html")
setwd("~/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes/docs")
install.packages("rmarkdown")
# Render index.md → index.html
rmarkdown::render("index.md", output_file = "index.html")
install.packages("rmarkdown")
rmarkdown::render("index.md", output_file = "index.html")
# Install the remotes package if needed
install.packages("remotes")
# Then install HAIgermany
remotes::install_github("ETC5523-2025/assignment-4-packages-and-shiny-apps-NathalieAaes/HAIgermany")
library(HAIgermany)
run_HAIgermany_app()
rmarkdown::render("README.Rmd", output_file = "README.html")
setwd("~/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes")
rmarkdown::render("README.Rmd", output_file = "README.html")
library(BHAI)
mccabe_scores_distr
as.data.frame(mat) %>%
tibble::rownames_to_column("AgeGroup") %>%
pivot_longer(-AgeGroup, names_to = "Gender", values_to = "Patients") %>%
group_by(AgeGroup) %>%
summarise(TotalPatients = sum(Patients, na.rm = TRUE), .groups = "drop") %>%
mutate(Infection = infection)})
mccabe_scores_distr_tidy <- mccabe_scores_distr_tidy %>%
mutate(AgeLow = as.numeric(gsub("\\D*(\\d+).*", "\\1", AgeGroup))) %>%
arrange(AgeLow) %>%
mutate(AgeGroup = factor(AgeGroup, levels = unique(AgeGroup), ordered = TRUE)) %>%
select(-AgeLow)
library(dplyr)
library(purrr)
library(tibble)
library(BHAI)
library(tidyr)
num_hai_patients_tidy <- purrr::imap_dfr(BHAI::num_hai_patients_by_stratum, function(mat, infection) {
as.data.frame(mat) %>%
tibble::rownames_to_column("AgeGroup") %>%
pivot_longer(-AgeGroup, names_to = "Gender", values_to = "Cases") %>%
group_by(AgeGroup) %>%
summarise(Patients = sum(Cases, na.rm = TRUE), .groups = "drop") %>%
mutate(Infection = infection)
})
#ordering of the age-intervals to make sure [5,9] isn't between [45,49] and [50,54]
age_levels <- rownames(BHAI::num_hai_patients_by_stratum[[1]])
num_hai_patients_tidy$AgeGroup <- factor(num_hai_patients_tidy$AgeGroup, levels = age_levels, ordered = TRUE)
mccabe_scores_distr_tidy <- purrr::imap_dfr(BHAI::mccabe_scores_distr, function(mat, infection) {
as.data.frame(mat) %>%
tibble::rownames_to_column("AgeGroup") %>%
pivot_longer(-AgeGroup, names_to = "Gender", values_to = "Patients") %>%
group_by(AgeGroup) %>%
summarise(TotalPatients = sum(Patients, na.rm = TRUE), .groups = "drop") %>%
mutate(Infection = infection)})
mccabe_scores_distr_tidy <- mccabe_scores_distr_tidy %>%
mutate(AgeLow = as.numeric(gsub("\\D*(\\d+).*", "\\1", AgeGroup))) %>%
arrange(AgeLow) %>%
mutate(AgeGroup = factor(AgeGroup, levels = unique(AgeGroup), ordered = TRUE)) %>%
select(-AgeLow)
#### Save datasets if needed ####
usethis::use_data(num_hai_patients_tidy, mccabe_scores_distr_tidy, overwrite = TRUE)
devtools::install(".", force = TRUE)
check_is_package()
setwd("/Users/nathalie/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes/HAIgermany")
#### Save datasets if needed ####
usethis::use_data(num_hai_patients_tidy, mccabe_scores_distr_tidy, overwrite = TRUE)
BHAI
data(german_pps_2011_repr)
force(num_hai_patients)
data(german_pps_2011_repr)
force(mccabe_scores_distr)
num_hai_patients_tidy <- purrr::imap_dfr(BHAI::num_hai_patients_by_stratum, function(mat, infection) {
as.data.frame(mat) %>%
tibble::rownames_to_column("AgeGroup") %>%
pivot_longer(-AgeGroup, names_to = "Gender", values_to = "Cases") %>%
group_by(AgeGroup) %>%
summarise(TotalCases = sum(Cases, na.rm = TRUE), .groups = "drop") %>%
mutate(Infection = infection)
})
#ordering of the age-intervals to make sure [5,9] isn't between [45,49] and [50,54]
age_levels <- rownames(BHAI::num_hai_patients_by_stratum[[1]])
num_hai_patients_tidy$AgeGroup <- factor(num_hai_patients_tidy$AgeGroup, levels = age_levels, ordered = TRUE)
mccabe_scores_distr_tidy <- purrr::imap_dfr(BHAI::mccabe_scores_distr, function(mat, infection) {
as.data.frame(mat) %>%
tibble::rownames_to_column("AgeGroup") %>%
pivot_longer(-AgeGroup, names_to = "Gender", values_to = "Cases") %>%
group_by(AgeGroup) %>%
summarise(PatientsAtRisk = sum(Cases, na.rm = TRUE), .groups = "drop") %>%
mutate(Infection = infection)})
mccabe_scores_distr_tidy <- mccabe_scores_distr_tidy %>%
mutate(AgeLow = as.numeric(gsub("\\D*(\\d+).*", "\\1", AgeGroup))) %>%
arrange(AgeLow) %>%
mutate(AgeGroup = factor(AgeGroup, levels = unique(AgeGroup), ordered = TRUE)) %>%
select(-AgeLow)
#### Save datasets if needed ####
usethis::use_data(num_hai_patients_tidy, mccabe_scores_distr_tidy, overwrite = TRUE)
setwd("/Users/nathalie/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes/HAIgermany")
#### Save datasets if needed ####
usethis::use_data(num_hai_patients_tidy, mccabe_scores_distr_tidy, overwrite = TRUE)
check_is_package()
devtools::install(".", force = TRUE)
check_is_package()
#### Save datasets if needed ####
usethis::use_data(num_hai_patients_tidy, mccabe_scores_distr_tidy, overwrite = TRUE)
setwd("/Users/nathalie/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes/HAIgermany")
check_is_package()
#### Save datasets if needed ####
usethis::use_data(num_hai_patients_tidy, mccabe_scores_distr_tidy, overwrite = TRUE)
usethis::use_data()
setwd("/Users/nathalie/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes/HAIgermany")
usethis::use_data()
usethis::use_data()
getwd()
list.files()
install.packages("usethis")
install.packages("usethis")
usethis::use_data()
setwd("~/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes/HAIgermany/data-raw")
usethis::use_data()
library(usethis)
usethis::use_data(num_hai_patients_tidy, mccabe_scores_distr_tidy, overwrite = TRUE)
rmarkdown::render("README.Rmd", output_format = "html_document")
setwd("~/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes")
rmarkdown::render("README.Rmd", output_format = "html_document")
rmarkdown::render("index.md", output_format = "html_document")
install.packages("markdown")  # if not installed
library(markdown)
markdown::markdownToHTML("index.md", "index.html")
setwd("/Users/nathalie/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes/HAIgermany")
install.packages("markdown")  # if not installed
library(markdown)
markdown::markdownToHTML("index.md", "index.html")
install.packages("markdown")
markdown::markdownToHTML("index.md", "index.html")
getwd()
list.files()
list.files(path = "/Users/nathalie/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes", recursive = TRUE)
setwd("~/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes/docs")
markdown::markdownToHTML("index.md", "index.html")
markdown::markdownToHTML("index.md", "index.html")
devtools::build_vignettes()
setwd("/Users/nathalie/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes/HAIgermany")
devtools::build_vignettes()
devtools::build_vignettes()
browseVignettes("HAIgermany")
usethis::use_vignette("HAIgermany")
devtools::build_vignettes()
devtools::install(build_vignettes = TRUE)
browseVignettes("HAIgermany")
browseVignettes("HAIgermany")
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::install(build_vignettes = TRUE)
devtools::build_vignettes()
devtools::install(build_vignettes = TRUE)
browseVignettes("HAIgermany")
library(ggplot2)
ggplot(num_hai_patients_tidy, aes(x = AgeGroup, y = TotalCases, fill = Infection)) +
geom_col(position = "dodge") +
labs(
title = "Number of HAI Patients by Age Group",
x = "Age Group",
y = "Number of Patients"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(num_hai_patients_tidy, aes(x = AgeGroup, y = TotalCases, fill = Infection)) +
geom_col(position = "dodge") +
labs(
title = "Number of HAI Patients by Age Group",
x = "Age Group",
y = "Number of Patients"
) +
theme_minimal(size = 8) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(num_hai_patients_tidy, aes(x = AgeGroup, y = TotalCases, fill = Infection)) +
geom_col(position = "dodge") +
labs(
title = "Number of HAI Patients by Age Group",
x = "Age Group",
y = "Number of Patients"
) +
theme_minimal(basesize = 8) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(num_hai_patients_tidy, aes(x = AgeGroup, y = TotalCases, fill = Infection)) +
geom_col(position = "dodge") +
labs(
title = "Number of HAI Patients by Age Group",
x = "Age Group",
y = "Number of Patients"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
devtools::build_vignettes()
devtools::install(build_vignettes = TRUE)
browseVignettes("HAIgermany")
devtools::build_vignettes()
devtools::install(build_vignettes = TRUE)
browseVignettes("HAIgermany")
setwd("/Users/nathalie/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes/HAIgermany")
library(pkgdown)
pkgdown::build_site()
library(pkgdown)
pkgdown::build_site()
library(pkgdown)
pkgdown::build_site()
library(pkgdown)
pkgdown::build_site()
devtools::build_vignettes()
browseVignettes("HAIgermany")
pkgdown::build_site()
?run_HAIgermany_app
?mccabe_scores_distr_tidy
setwd("/Users/nathalie/Desktop/Communicating with Data/assignment-4-packages-and-shiny-apps-NathalieAaes/HAIgermany")
roxygen2::roxygenise()
?run_HAIgermany_app
?mccabe_scores_distr_tidy
?run_HAIgermany_app
roxygen2::roxygenise()
pkgdown::build_site()
shiny::runApp('inst/shiny-app')
runApp('inst/shiny-app')
runApp('inst/shiny-app')
runApp('inst/shiny-app')
runApp('inst/shiny-app')
pkgdown::build_site()
#If not yet installed:
install.packages("remotes")
remotes::install_github("ETC5523-2025/assignment-4-packages-and-shiny-apps-NathalieAaes/HAIgermany")
library(HAIgermany)
run_HAIgermany_app()
run_HAIgermany_app()
run_HAIgermany_app()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
